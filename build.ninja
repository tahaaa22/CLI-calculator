# === Variables ===
cflags = -Wall -Wextra -O2 -IC:\Python312\include
ldflags = -LC:\Python312\libs -lpython312

# === Rules ===

# Compile C backend (optional)
rule compile_c
  command = gcc $cflags -c c_backend/calc.c -o c_backend/calc.o

# Build Python extension module
rule build_ext
  command = python setup.py build_ext --inplace

# Compile C unit test binary
rule test_c_compile
  command = gcc tests/test_c_calc.c c_backend/calc.c -o tests/test_c_calc.exe

# Run C unit test binary
rule test_c_run
  command = tests/test_c_calc.exe

# Run Python unit tests
rule test_python
  command = python -m unittest discover tests

# Run pre-commit checks
rule precommit
  command = powershell -command "python -m pre_commit install; python -m pre_commit run --all-files"

# Build Sphinx docs
rule docs
  command = powershell -Command "doxygen Doxyfile; python -m sphinx.cmd.build -b html docs/source docs/build; start docs/build/index.html"

# Clean build artifacts safely on Windows
rule clean
  command = powershell -Command "if (Test-Path build) { Remove-Item -Recurse -Force build }; if (Test-Path dist) { Remove-Item -Recurse -Force dist }; Get-ChildItem -Recurse -Include *.pyd,*.exp,*.lib | Remove-Item -Force -ErrorAction SilentlyContinue; Get-ChildItem c_backend -Include *.o,test_calc.exe -Recurse | Remove-Item -Force -ErrorAction SilentlyContinue; Get-ChildItem tests -Include *.exe -Recurse | Remove-Item -Force -ErrorAction SilentlyContinue; Get-ChildItem -Directory -Recurse -Include __pycache__ | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue"

# === Targets ===

build cbuild: compile_c
build extbuild: build_ext

build testc_compile: test_c_compile
build testc_run: test_c_run
build testc: phony testc_compile testc_run

build testpy: test_python
build lint: precommit
build docs: docs
build cleanall: clean
